#Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#SPDX-License-Identifier: Apache-2.0
# Target keyspace and table in Amazon Keyspaces
TARGET_KEYSPACE=ks_test_cql_replicator
TARGET_TABLE=test_cql_replicator
# Source query that runs against Cassandra cluster per partition key
SOURCE_CQL_QUERY=SELECT json key,col0,col1,col2,col3,col4,col5,col6,col7,col8,writetime(col2),writetime(col4) FROM ks_test_cql_replicator.test_cql_replicator WHERE key=:key
WRITETIME_COLUMNS=col2, col4
# Pooling period from the Cassandra in seconds
POOLING_PERIOD=1
REPLICATE_WITH_TIMESTAMP=false
REPLICATE_RETRY_MAXATTEMPTS=2048
REPLICATE_WITH_CORE_POOL_SIZE=8
REPLICATE_WITH_MAX_CORE_POOL_SIZE=16
# Core pool timeout in seconds
REPLICATE_WITH_CORE_POOL_TIMEOUT=360
# Refresh period of statistics in seconds
POOLING_STATS_DATA=60
# Use PartiQL statements to transform JSON Cassandra rows into a new Keyspaces' schema if need it, https://partiql.org/tutorial.html
# inputDocument represents the source cassandra row in the PartiQL statement
# For example, transform JSON key,col0,col1,col2,col3,col4,col5,col6,col7,col8 to JSON id, col0
TRANSFORM_INBOUND_REQUEST=false
TRANSFORM_SQL=SELECT \"key\" as \"id\", \"col0\" as \"new_col\" FROM inputDocument
TRANSFORM_PARTITION_KEY=id
ENABLE_INTERNAL_PARTITION_KEY_STORAGE=false
EXTERNAL_MEMCACHED_STORAGE=true
EXTERNAL_MEMCACHED_STORAGE_ENDPOINT=localhost
EXTERNAL_MEMCACHED_STORAGE_PORT=11211
EXTERNAL_MEMCACHED_PAGE_SIZE_PER_TILE=3000
ENABLE_REPLICATION_POINT=false
STARTING_REPLICATION_TIMESTAMP=1659453890062043
REPLICATE_DELETES=true
LOCAL_STORAGE_PATH=/opt
LOCAL_STORAGE_PAGE_SIZE_PK=5000
ENABLE_CLOUD_WATCH=true
CLOUD_WATCH_REGION=us-east-1
